{"ast":null,"code":"var _jsxFileName = \"D:\\\\Event web (Github)\\\\Event-Management-System\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport AdminPanel from '../components/AdminPanel';\nimport Login from '../components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = ({\n  onLogin\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('adminToken'));\n  const navigate = useNavigate();\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n    onLogin();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('adminToken');\n    setIsAuthenticated(false);\n    navigate('/');\n    toast.success('Logged out successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"o4y+T+DDzI5SuVbZQ1k14XVX/w0=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["useState","useNavigate","toast","AdminPanel","Login","jsxDEV","_jsxDEV","AdminPage","onLogin","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","navigate","handleLoginSuccess","handleLogout","removeItem","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Event web (Github)/Event-Management-System/frontend/src/pages/AdminPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AdminPanel from '../components/AdminPanel';\r\nimport Login from '../components/Login';\r\n\r\nconst AdminPage = ({ onLogin }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    !!localStorage.getItem('adminToken')\r\n  );\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsAuthenticated(true);\r\n    onLogin();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    setIsAuthenticated(false);\r\n    navigate('/');\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      {isAuthenticated ? (\r\n        <AdminPanel />\r\n      ) : (\r\n        <Login onLogin={handleLoginSuccess} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CACpD,CAAC,CAACY,YAAY,CAACC,OAAO,CAAC,YAAY,CACrC,CAAC;EACD,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC/BJ,kBAAkB,CAAC,IAAI,CAAC;IACxBH,OAAO,CAAC,CAAC;EACX,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBJ,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;IACrCN,kBAAkB,CAAC,KAAK,CAAC;IACzBG,QAAQ,CAAC,GAAG,CAAC;IACbZ,KAAK,CAACgB,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBV,eAAe,gBACdJ,OAAA,CAACH,UAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEdlB,OAAA,CAACF,KAAK;MAACI,OAAO,EAAEO;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACtC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BIF,SAAS;EAAA,QAIIN,WAAW;AAAA;AAAAwB,EAAA,GAJxBlB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}