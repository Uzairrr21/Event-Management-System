{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\event-management-system\\\\frontend\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport EventForm from './EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const fetchEvents = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/api/events');\n      setEvents(data);\n    } catch (error) {\n      toast.error('Failed to load events');\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this event?')) {\n      try {\n        const token = localStorage.getItem('adminToken');\n        await axios.delete(`/api/events/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        fetchEvents();\n        toast.success('Event deleted successfully');\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response2;\n        toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to delete event');\n        if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n          localStorage.removeItem('adminToken');\n          window.location.reload();\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      className: \"btn btn-add\",\n      children: \"Add New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(EventForm, {\n      eventData: editingEvent || {},\n      onSubmit: async formData => {\n        try {\n          const token = localStorage.getItem('adminToken');\n          const config = {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          };\n          if (editingEvent) {\n            await axios.put(`/api/events/${editingEvent._id}`, formData, config);\n            toast.success('Event updated successfully');\n          } else {\n            await axios.post('/api/events', formData, config);\n            toast.success('Event created successfully');\n          }\n          setShowForm(false);\n          setEditingEvent(null);\n          fetchEvents();\n        } catch (error) {\n          var _error$response3, _error$response3$data;\n          toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Operation failed');\n        }\n      },\n      onCancel: () => {\n        setShowForm(false);\n        setEditingEvent(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-list\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(event.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingEvent(event);\n              setShowForm(true);\n            },\n            className: \"btn btn-edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(event._id),\n            className: \"btn btn-delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, event._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"1xgV+Qy2xPgTkdV94TZX2u8+hec=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["useState","useEffect","toast","axios","EventForm","jsxDEV","_jsxDEV","AdminPanel","_s","events","setEvents","showForm","setShowForm","editingEvent","setEditingEvent","fetchEvents","data","get","error","handleDelete","id","window","confirm","token","localStorage","getItem","delete","headers","Authorization","success","_error$response","_error$response$data","_error$response2","response","message","status","removeItem","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","eventData","onSubmit","formData","config","put","_id","post","_error$response3","_error$response3$data","onCancel","map","event","title","Date","date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/event-management-system/frontend/src/components/AdminPanel.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport EventForm from './EventForm';\r\n\r\nconst AdminPanel = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/events');\r\n      setEvents(data);\r\n    } catch (error) {\r\n      toast.error('Failed to load events');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this event?')) {\r\n      try {\r\n        const token = localStorage.getItem('adminToken');\r\n        await axios.delete(`/api/events/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        fetchEvents();\r\n        toast.success('Event deleted successfully');\r\n      } catch (error) {\r\n        toast.error(error.response?.data?.message || 'Failed to delete event');\r\n        if (error.response?.status === 401) {\r\n          localStorage.removeItem('adminToken');\r\n          window.location.reload();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchEvents(); }, []);\r\n\r\n  return (\r\n    <div className=\"admin-panel\">\r\n      <h2>Admin Dashboard</h2>\r\n      <button onClick={() => setShowForm(true)} className=\"btn btn-add\">\r\n        Add New Event\r\n      </button>\r\n\r\n      {showForm && (\r\n        <EventForm\r\n          eventData={editingEvent || {}}\r\n          onSubmit={async (formData) => {\r\n            try {\r\n              const token = localStorage.getItem('adminToken');\r\n              const config = {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n              };\r\n\r\n              if (editingEvent) {\r\n                await axios.put(`/api/events/${editingEvent._id}`, formData, config);\r\n                toast.success('Event updated successfully');\r\n              } else {\r\n                await axios.post('/api/events', formData, config);\r\n                toast.success('Event created successfully');\r\n              }\r\n              setShowForm(false);\r\n              setEditingEvent(null);\r\n              fetchEvents();\r\n            } catch (error) {\r\n              toast.error(error.response?.data?.message || 'Operation failed');\r\n            }\r\n          }}\r\n          onCancel={() => {\r\n            setShowForm(false);\r\n            setEditingEvent(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <div className=\"events-list\">\r\n        {events.map(event => (\r\n          <div key={event._id} className=\"admin-event-card\">\r\n            <h3>{event.title}</h3>\r\n            <p>{new Date(event.date).toLocaleString()}</p>\r\n            <div className=\"admin-actions\">\r\n              <button \r\n                onClick={() => {\r\n                  setEditingEvent(event);\r\n                  setShowForm(true);\r\n                }} \r\n                className=\"btn btn-edit\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button \r\n                onClick={() => handleDelete(event._id)} \r\n                className=\"btn btn-delete\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,aAAa,CAAC;MAC/CP,SAAS,CAACM,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdhB,KAAK,CAACgB,KAAK,CAAC,uBAAuB,CAAC;IACtC;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAIC,MAAM,CAACC,OAAO,CAAC,6CAA6C,CAAC,EAAE;MACjE,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAChD,MAAMtB,KAAK,CAACuB,MAAM,CAAC,eAAeN,EAAE,EAAE,EAAE;UACtCO,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUL,KAAK;UAChC;QACF,CAAC,CAAC;QACFR,WAAW,CAAC,CAAC;QACbb,KAAK,CAAC2B,OAAO,CAAC,4BAA4B,CAAC;MAC7C,CAAC,CAAC,OAAOX,KAAK,EAAE;QAAA,IAAAY,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;QACd9B,KAAK,CAACgB,KAAK,CAAC,EAAAY,eAAA,GAAAZ,KAAK,CAACe,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBd,IAAI,cAAAe,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,wBAAwB,CAAC;QACtE,IAAI,EAAAF,gBAAA,GAAAd,KAAK,CAACe,QAAQ,cAAAD,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;UAClCX,YAAY,CAACY,UAAU,CAAC,YAAY,CAAC;UACrCf,MAAM,CAACgB,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF;IACF;EACF,CAAC;EAEDrC,SAAS,CAAC,MAAM;IAAEc,WAAW,CAAC,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC;EAEvC,oBACET,OAAA;IAAKiC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BlC,OAAA;MAAAkC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtC,OAAA;MAAQuC,OAAO,EAAEA,CAAA,KAAMjC,WAAW,CAAC,IAAI,CAAE;MAAC2B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAElE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERjC,QAAQ,iBACPL,OAAA,CAACF,SAAS;MACR0C,SAAS,EAAEjC,YAAY,IAAI,CAAC,CAAE;MAC9BkC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;QAC5B,IAAI;UACF,MAAMzB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;UAChD,MAAMwB,MAAM,GAAG;YACbtB,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,KAAK;YAAG;UAC9C,CAAC;UAED,IAAIV,YAAY,EAAE;YAChB,MAAMV,KAAK,CAAC+C,GAAG,CAAC,eAAerC,YAAY,CAACsC,GAAG,EAAE,EAAEH,QAAQ,EAAEC,MAAM,CAAC;YACpE/C,KAAK,CAAC2B,OAAO,CAAC,4BAA4B,CAAC;UAC7C,CAAC,MAAM;YACL,MAAM1B,KAAK,CAACiD,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAEC,MAAM,CAAC;YACjD/C,KAAK,CAAC2B,OAAO,CAAC,4BAA4B,CAAC;UAC7C;UACAjB,WAAW,CAAC,KAAK,CAAC;UAClBE,eAAe,CAAC,IAAI,CAAC;UACrBC,WAAW,CAAC,CAAC;QACf,CAAC,CAAC,OAAOG,KAAK,EAAE;UAAA,IAAAmC,gBAAA,EAAAC,qBAAA;UACdpD,KAAK,CAACgB,KAAK,CAAC,EAAAmC,gBAAA,GAAAnC,KAAK,CAACe,QAAQ,cAAAoB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrC,IAAI,cAAAsC,qBAAA,uBAApBA,qBAAA,CAAsBpB,OAAO,KAAI,kBAAkB,CAAC;QAClE;MACF,CAAE;MACFqB,QAAQ,EAAEA,CAAA,KAAM;QACd3C,WAAW,CAAC,KAAK,CAAC;QAClBE,eAAe,CAAC,IAAI,CAAC;MACvB;IAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,eAEDtC,OAAA;MAAKiC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzB/B,MAAM,CAAC+C,GAAG,CAACC,KAAK,iBACfnD,OAAA;QAAqBiC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/ClC,OAAA;UAAAkC,QAAA,EAAKiB,KAAK,CAACC;QAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBtC,OAAA;UAAAkC,QAAA,EAAI,IAAImB,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC;QAAC;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CtC,OAAA;UAAKiC,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BlC,OAAA;YACEuC,OAAO,EAAEA,CAAA,KAAM;cACb/B,eAAe,CAAC2C,KAAK,CAAC;cACtB7C,WAAW,CAAC,IAAI,CAAC;YACnB,CAAE;YACF2B,SAAS,EAAC,cAAc;YAAAC,QAAA,EACzB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtC,OAAA;YACEuC,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACsC,KAAK,CAACN,GAAG,CAAE;YACvCZ,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC3B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAnBEa,KAAK,CAACN,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAtGID,UAAU;AAAAuD,EAAA,GAAVvD,UAAU;AAwGhB,eAAeA,UAAU;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}